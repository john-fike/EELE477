close all; 
clear;
clc;

load('bach_fugue.mat');
% load('bach_fugue_short.mat');

bpm = 440;
beats_per_second = bpm/60;
seconds_per_beat = 1/beats_per_second;
seconds_per_pulse = seconds_per_beat / 4;
fs = 11025;



voiceEndTime = (theVoices(1).startPulses(length(theVoices(1).startPulses)) ... 
+ theVoices(1).durations(length(theVoices(1).durations))) * seconds_per_pulse;              %End time in seconds

%holds value of every sample generated by key2note
xx = zeros(1,ceil(voiceEndTime*fs*2));

sizeVoices = size(theVoices);
numVoices = sizeVoices(2)

j = 1;
% for j = 1 : numVoices
    for i = 1:length(theVoices(j).noteNumbers)
        startTime = floor(theVoices(j).startPulses(i) * seconds_per_pulse * fs);      %start index in xx 
        length    = (theVoices(j).durations(i) * seconds_per_pulse * fs) + 1;               %length of note in samples
        endTime   = ceil(startTime + length);                                          %end time = start index + length
        key       = theVoices(j).noteNumbers(i);
    
    %     A = linspace(0, 0.9, length*.1);     %rise 35% of signal
    %     D = linspace(0.9, 0.7,length*0.05);    %drop of 5% of signal
    %     S = linspace(0.7, 0.7,length*0.40);    %delay of 40% of signal
    %     R = linspace(0.7, 0,length*0.20);      %drop of 25% of signal
    %     ADSR = [A D S R] ;
    
        xx(startTime:endTime-1) = xx(startTime:endTime-1) + key2note(1,key,length/fs);    
    end
% end
soundsc(xx);


